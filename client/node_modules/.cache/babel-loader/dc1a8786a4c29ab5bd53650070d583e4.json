{"ast":null,"code":"var _jsxFileName = \"F:\\\\development\\\\development\\\\client\\\\src\\\\components\\\\ApiList.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport $ from 'jquery';\nimport axios from 'axios';\nconst APIs_URL = 'final-data.json';\n\nclass AppList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"new.json\").then(response => response.data.results.map(user => ({\n      apptitle: `${user.apptitle}`,\n      name: `${user.name.first} ${user.name.last}`,\n      username: `${user.login.username}`,\n      email: `${user.email}`,\n      image: `${user.picture.thumbnail}`\n    }))).then(users => {\n      this.setState({\n        users,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const {\n      isLoading,\n      users\n    } = this.state;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Random User\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, !isLoading ? users.map(user => {\n      const {\n        apptitle,\n        username,\n        name,\n        email,\n        image\n      } = user;\n      return React.createElement(\"div\", {\n        key: username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, apptitle), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: image,\n        alt: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, email), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default AppList; //https://css-tricks.com/using-data-in-react-with-the-fetch-api-and-axios/","map":{"version":3,"sources":["F:/development/development/client/src/components/ApiList.js"],"names":["React","Component","styled","$","axios","APIs_URL","AppList","constructor","props","state","users","isLoading","errors","componentDidMount","get","then","response","data","results","map","user","apptitle","name","first","last","username","login","email","image","picture","thumbnail","setState","catch","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,QAAQ,GAAG,iBAAjB;;AACA,MAAMC,OAAN,SAAsBN,KAAK,CAACC,SAA5B,CAAsC;AAErCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEbC,MAAAA,SAAS,EAAE,IAFE;AAGbC,MAAAA,MAAM,EAAE;AAHK,KAAb;AAKD;;AAEFC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,KAAK,CACHU,GADF,CACM,UADN,EAEEC,IAFF,CAEOC,QAAQ,IACZA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CAA0BC,IAAI,KAAK;AACvCC,MAAAA,QAAQ,EAAE,GAAED,IAAI,CAACC,QAAS,EADa;AAEjCC,MAAAA,IAAI,EAAG,GAAEF,IAAI,CAACE,IAAL,CAAUC,KAAM,IAAGH,IAAI,CAACE,IAAL,CAAUE,IAAK,EAFV;AAGjCC,MAAAA,QAAQ,EAAG,GAAEL,IAAI,CAACM,KAAL,CAAWD,QAAS,EAHA;AAIjCE,MAAAA,KAAK,EAAG,GAAEP,IAAI,CAACO,KAAM,EAJY;AAKjCC,MAAAA,KAAK,EAAG,GAAER,IAAI,CAACS,OAAL,CAAaC,SAAU;AALA,KAAL,CAA9B,CAHH,EAWEf,IAXF,CAWOL,KAAK,IAAI;AACb,WAAKqB,QAAL,CAAc;AACZrB,QAAAA,KADY;AAEZC,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KAhBF,EAiBEqB,KAjBF,CAiBQC,KAAK,IAAI,KAAKF,QAAL,CAAc;AAAEE,MAAAA,KAAF;AAAStB,MAAAA,SAAS,EAAE;AAApB,KAAd,CAjBjB;AAkBF;;AAECuB,EAAAA,MAAM,GAAG;AACT,UAAM;AAAEvB,MAAAA,SAAF;AAAaD,MAAAA;AAAb,QAAuB,KAAKD,KAAlC;AACA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACE,SAAD,GACCD,KAAK,CAACS,GAAN,CAAUC,IAAI,IAAI;AAChB,YAAM;AAAEC,QAAAA,QAAF;AAAWI,QAAAA,QAAX;AAAqBH,QAAAA,IAArB;AAA2BK,QAAAA,KAA3B;AAAkCC,QAAAA;AAAlC,UAA4CR,IAAlD;AACA,aACE;AAAK,QAAA,GAAG,EAAEK,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIJ,QAAJ,CADS,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIC,IAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEM,KAAV;AAAiB,QAAA,GAAG,EAAEN,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIK,KAAJ,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAWD,KAbD,CADD,GAgBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBJ,CAFF,CADF;AAyBD;;AA3DqC;;AA6DtC,eAAerB,OAAf,C,CACA","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\nconst APIs_URL = 'final-data.json';\r\nclass AppList extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n    isLoading: true,\r\n    errors: null\r\n    };\r\n  }\r\n\t\r\n componentDidMount() {\r\n   axios\r\n    .get(\"new.json\")\r\n    .then(response =>\r\n      response.data.results.map(user => ({\r\n\t\tapptitle:`${user.apptitle}`,\r\n        name: `${user.name.first} ${user.name.last}`,\r\n        username: `${user.login.username}`,\r\n        email: `${user.email}`,\r\n        image: `${user.picture.thumbnail}`\r\n      }))\r\n    )\r\n    .then(users => {\r\n      this.setState({\r\n        users,\r\n        isLoading: false\r\n      });\r\n    })\r\n    .catch(error => this.setState({ error, isLoading: false }));\r\n}\r\n\r\n  render() {\r\n  const { isLoading, users } = this.state;\r\n  return (\r\n    <React.Fragment>\r\n      <h2>Random User</h2>\r\n      <div>\r\n        {!isLoading ? (\r\n          users.map(user => {\r\n            const { apptitle,username, name, email, image } = user;\r\n            return (\r\n              <div key={username}>\r\n\t\t\t  <p>{apptitle}</p>\r\n                <p>{name}</p>\r\n                <div>\r\n                  <img src={image} alt={name} />\r\n                </div>\r\n                <p>{email}</p>\r\n                <hr />\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>Loading...</p>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n}\r\nexport default AppList;\r\n//https://css-tricks.com/using-data-in-react-with-the-fetch-api-and-axios/"]},"metadata":{},"sourceType":"module"}