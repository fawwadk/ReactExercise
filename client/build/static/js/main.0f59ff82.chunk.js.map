{"version":3,"sources":["components/Navigation.js","components/Header.js","components/ApiList.js","components/Home.js","components/Intro.js","components/Guide.js","components/Reference.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","className","href","Header","styled","p","AppList","props","state","users","isLoading","isHovered","message","hover","errors","onchange","onChange","bind","axios","get","then","response","data","results","map","user","id","apptitle","description","descriptions","icon","intro","link","guide","reference","setState","catch","error","e","this","username","target","value","style","background","Fragment","onMouseEnter","onMouseLeave","data-id","React","Component","home","role","ApiList","Intro","class","Guide","Reference","Login","initialState","email","pwd","onChangeUserEmail","onChangeUserPwd","onSubmit","event","preventDefault","userObject","password","post","res","console","log","htmlFor","type","placeholder","name","App","basename","path","component","Home","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f59ff82.chunk.js","sourcesContent":["import React from 'react';\r\nconst Navigation = () => {\r\n  return (\r\n    <div className=\"navbar-nav-scroll\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item active text-uppercase text-white\"><a className=\"nav-link\" href=\"/\">Documentation</a></li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default Navigation;","import React from 'react';\r\nimport Navigation from './Navigation';\r\nconst Header = () => {\r\n    return (\r\n    <header className=\"navbar navbar-expand-sm bg-primary navbar-dark\">\r\n        <Navigation/>\r\n    </header>\r\n    );\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\nconst APIs_URL = 'final-data.json';\r\n\r\nconst HoverText = styled.p`\r\n\tcolor: #000;\r\n\t:hover {\r\n\t\tcolor: #ed1212;\r\n\t\tcursor: pointer;\r\n\t}`\r\nclass AppList extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n    super(props);\r\n\t\r\n    this.state = {\r\n\t\tusers: [],\r\n\t\tisLoading: true,\r\n\t\tisHovered: true, message: \"\", hover: false,\r\n\t\terrors: null\r\n    };\r\n\t this.onchange=this.onChange.bind(this)\r\n }\r\n\r\n  \r\n componentDidMount() {\r\n   axios\r\n    .get(\"new.json\")\r\n    .then(response =>\r\n      response.data.results.map(user => ({\r\n\t\tid:`${user.id}`,\r\n\t\tapptitle:`${user.apptitle}`,\r\n\t\tdescription:`${user.descriptions}`,\r\n\t\ticon:`${user.icon}`,\r\n\t\tintro: `${user.link.intro}`,\r\n\t\tguide:`${user.link.guide}` ,\r\n\t\treference:`${user.link.reference}`,\r\n        //link: `${user.link.intro} ${user.link.guide} ${user.link.reference}`,\r\n        \r\n      }))\r\n    )\r\n    .then(users => {\r\n      this.setState({\r\n        users,\r\n        isLoading: false\r\n      });\r\n    })\r\n    .catch(error => this.setState({ error, isLoading: false,isHovered: false }));\r\n\t\r\n\t}\r\n    onMouseEnter(e) {\r\n\t    //this.setState({message: 'Mouse Enter'})\r\n\t\t this.setState({ hover: true });\r\n    }\r\n    onMouseLeave(e) {\r\n\t\tthis.setState({ hover: false });\r\n\t //this.setState({message: 'Mouse Leave'})\r\n\t //e.target.style.background = 'red';\r\n\t \r\n\t}\t\r\n  \r\nonChange(e) {\r\n    this.setState({\r\n        username: e.target.value\r\n    })\r\n\te.target.style.background = 'red';\r\n}\r\n  render() {\r\n  const { isLoading, users } = this.state;\r\n  return (\r\n    <React.Fragment>\r\n     \r\n      <div className=\"row mb-4\">\r\n        {!isLoading ? (\r\n          users.map(user => {\r\n            const { id,apptitle,icon,description,username,intro,guide,reference} = user;\r\n\t\t\t\r\n            return (\r\n                <div className=\"col-sm-6 py-2 col-lg-4\">\r\n\t\t\t        \r\n\t\t\t\t\t<div className={`card h-100 ${this.state.hover ? 'shadow-lg' : ''}`}  onMouseEnter={() => this.onMouseEnter(this)} \r\n\t\t\t\t\t onMouseLeave={() => this.onMouseLeave(this)} data-id = {id}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div \r\n\t\t\t\t\tclassName={`card-body `}  \r\n\t\t\t\t\t >\r\n\t\t\t\t            <h5 className=\"card-title text-dark\">< i className={icon}></i>  {apptitle}</h5>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <p className=\"card-text text-muted\">{description}</p> \r\n\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t<div className=\"card-detail mx-3 \">\r\n\t\t\t\t\t\t\t <ul className = \"list-inline \">\r\n\t\t\t\t\t\t\t  <li><a href={intro} className=\"text-dark no-underline text-capitalize footer-link-icon\">Intro<span className=\"position-relative\"><i className=\"fa fa-chevron-right float-right\" ></i></span></a></li>\r\n\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t <li><a href={guide} className=\"text-dark no-underline text-capitalize footer-link-icon\">Developer's guide <span className=\"position-relative\"><i className=\"fa fa-chevron-right float-right\" ></i></span></a></li>\r\n\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t<li><a href={reference} className=\"text-dark no-underline text-capitalize footer-link-icon\">API reference<span className=\"position-relative\"><i className=\"fa fa-chevron-right float-right\" ></i></span></a></li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>Loading...</p>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n}\r\nexport default AppList;\r\n//https://css-tricks.com/using-data-in-react-with-the-fetch-api-and-axios/","import React, { Component} from 'react';\r\nimport ApiList from './ApiList';\r\n\r\nclass home extends Component{\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<main role=\"main bg-info\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t <h3>APIs & Services</h3>\r\n\t\t\t\t <p>Access information on how to use Forget APIs and Services</p>\r\n\t\t\t\t <ApiList/>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\t\r\n\t\t);\r\n    }\r\n}\r\nexport default home;\r\n","import React, { Component} from 'react';\r\n \r\nconst Intro = () => {\r\n    return (\r\n\t<div class=\"page-content\">\r\n    <div class=\"block-title\">Welcome to Framework7</div>\r\n    <div class=\"block block-strong\">\r\n      <p>Framework7 - is a free and open source HTML mobile framework to develop hybrid mobile apps or web apps with iOS or Android (Material) native look and feel. It is also an indispensable prototyping apps tool to show working app prototype as soon as possible in case you need to. Framework7 is created by Vladimir Kharlampidi (iDangero.us).</p>\r\n      <p>The main approach of the Framework7 is to give you an opportunity to create iOS and Android (Material) apps with HTML, CSS and JavaScript easily and clear. Framework7 is full of freedom. It doesn't limit your imagination or offer ways of any solutions somehow. Framework7 gives you freedom!</p>\r\n      <p>Framework7 is not compatible with all platforms. It is focused only on iOS and Android (Material) to bring the best experience and simplicity.</p>\r\n      <p>Framework7 is definitely for you if you decide to build iOS and Android hybrid app (Cordova or PhoneGap) or web app that looks like and feels as great native iOS or Android (Material) apps.</p>\r\n    </div>\r\n  </div>\r\n    );\r\n}\r\n \r\nexport default Intro;","import React, { Component} from 'react';\r\n \r\nconst Guide = () => {\r\n    return (\r\n\t<div class=\"page-content\">\r\n    <div class=\"block-title\">Welcome to Framework7</div>\r\n    <div class=\"block block-strong\">\r\n      <p>Framework7 - is a free and open source HTML mobile framework to develop hybrid mobile apps or web apps with iOS or Android (Material) native look and feel. It is also an indispensable prototyping apps tool to show working app prototype as soon as possible in case you need to. Framework7 is created by Vladimir Kharlampidi (iDangero.us).</p>\r\n      <p>The main approach of the Framework7 is to give you an opportunity to create iOS and Android (Material) apps with HTML, CSS and JavaScript easily and clear. Framework7 is full of freedom. It doesn't limit your imagination or offer ways of any solutions somehow. Framework7 gives you freedom!</p>\r\n      <p>Framework7 is not compatible with all platforms. It is focused only on iOS and Android (Material) to bring the best experience and simplicity.</p>\r\n      <p>Framework7 is definitely for you if you decide to build iOS and Android hybrid app (Cordova or PhoneGap) or web app that looks like and feels as great native iOS or Android (Material) apps.</p>\r\n    </div>\r\n  </div>\r\n    );\r\n}\r\n \r\nexport default Guide;","import React, { Component} from 'react';\r\n \r\nconst Reference = () => {\r\n    return (\r\n\t<div class=\"page-content\">\r\n    <div class=\"block-title\">Welcome to Framework7</div>\r\n    <div class=\"block block-strong\">\r\n      <p>Framework7 - is a free and open source HTML mobile framework to develop hybrid mobile apps or web apps with iOS or Android (Material) native look and feel. It is also an indispensable prototyping apps tool to show working app prototype as soon as possible in case you need to. Framework7 is created by Vladimir Kharlampidi (iDangero.us).</p>\r\n      <p>The main approach of the Framework7 is to give you an opportunity to create iOS and Android (Material) apps with HTML, CSS and JavaScript easily and clear. Framework7 is full of freedom. It doesn't limit your imagination or offer ways of any solutions somehow. Framework7 gives you freedom!</p>\r\n      <p>Framework7 is not compatible with all platforms. It is focused only on iOS and Android (Material) to bring the best experience and simplicity.</p>\r\n      <p>Framework7 is definitely for you if you decide to build iOS and Android hybrid app (Cordova or PhoneGap) or web app that looks like and feels as great native iOS or Android (Material) apps.</p>\r\n    </div>\r\n  </div>\r\n    );\r\n}\r\n \r\nexport default Reference;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Login extends Component { \r\n   constructor(props){\r\n      super(props);\r\n\t   this.initialState = {\r\n         email: '',\r\n         pwd: ''\r\n      }\r\n      this.state = this.initialState;\r\n      this.onChangeUserEmail = this.onChangeUserEmail.bind(this);\r\n\t   this.onChangeUserPwd = this.onChangeUserPwd.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n      \r\n\r\n\t}\r\n   onChangeUserEmail(e) {\r\n      this.setState({ email: e.target.value })\r\n   }\r\n\tonChangeUserPwd(e){\r\n\t\tthis.setState({ pwd: e.target.value })\r\n\t}\r\n   onSubmit(event) {\r\n   event.preventDefault()\r\n   const userObject = {\r\n      email: this.state.email,\r\n      password: this.state.pwd\r\n   };\r\n   axios.post('http://127.0.0.1:5000/login-post', userObject)\r\n      .then((res) => {\r\n          console.log(res.data)\r\n      }).catch((error) => {\r\n          console.log(error)\r\n      });\r\n}\r\n   render(){\r\n      return (\r\n         <div className =\"container\">\r\n         <h2>Login Form</h2>\r\n            <form onSubmit={this.onSubmit}>\r\n               <div className=\"form-group\">\r\n               <label htmlFor=\"email\">Email:</label>\r\n               <input type=\"email\"className =\"form-control\" id=\"email\" \r\n               placeholder=\"Enter email\" name=\"email\" \r\n               value={this.state.email} onChange={this.onChangeUserEmail}/>\r\n               </div>\r\n               <div className=\"form-group\">\r\n               <label htmlFor=\"pwd\">Password:</label>\r\n               <input type=\"password\" className =\"form-control\" id=\"pwd\"\r\n               placeholder=\"Enter password\" name=\"pwd\" \r\n               value={this.state.pwd} onChange={this.onChangeUserPwd}/>\r\n               </div>\r\n               <button type=\"submit\" className =\"btn btn-default\">Submit</button>\r\n            </form>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\n\r\nexport default Login;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Intro from './components/Intro';\nimport Guide from './components/Guide';\nimport Reference from './components/Reference';\nimport Login from './components/Login';\n\n\n// using ES6 modules\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nexport default class App extends Component{\n  render(){\n    return (\n      <Router basename=\"/mysite\">\n        <Header/>\n          <Switch>\n            <Route path=\"/\" component={Home} exact/>\n\t\t\t<Route path=\"/intro\" component={Intro}/>\n\t\t\t<Route path=\"/guide\" component={Guide}/>\n\t\t\t<Route path=\"/reference\" component={Reference}/>\n\t\t\t<Route path=\"/login\" component={Login}/>\n          </Switch>\n      </Router>   \n    );\n  }\n}\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'font-awesome/css/font-awesome.min.css';\nimport $ from 'jquery';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}